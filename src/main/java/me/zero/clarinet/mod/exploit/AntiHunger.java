package me.zero.clarinet.mod.exploit;

import me.zero.clarinet.mixin.mixins.minecraft.network.play.client.ICPacketPlayer;
import org.lwjgl.input.Keyboard;

import me.zero.clarinet.event.api.EventTarget;

import me.zero.clarinet.Impact;
import me.zero.clarinet.event.network.EventPacketSend;
import me.zero.clarinet.manager.manager.ModManager;
import me.zero.clarinet.mod.Category;
import me.zero.clarinet.mod.Mod;
import me.zero.clarinet.mod.player.NoFall;
import me.zero.clarinet.util.BlockUtils;
import me.zero.values.types.MultiValue;
import net.minecraft.network.play.client.CPacketPlayer;

public class AntiHunger extends Mod {
	
	private MultiValue<String> mode = new MultiValue<String>(this, "Mode", "mode", "New", new String[] { "New", "Old" });
	
	public AntiHunger() {
		super("AntiHunger", "Don't lose hunger", Keyboard.KEY_NONE, Category.EXPLOIT);
	}
	
	@EventTarget
	private void onPacketSend(EventPacketSend event) {
		this.suffix = mode.getValue();
		if (!BlockUtils.isOnLiquid() && event.getPacket() instanceof CPacketPlayer) {
			ICPacketPlayer packet = (ICPacketPlayer) event.getPacket();
			if (mode.getValue().equalsIgnoreCase("New")) {
				double yFix = mc.player.posY - mc.player.lastTickPosY;
				boolean ground = yFix == 0.0;
				if (ground && !mc.playerController.getIsHittingBlock()) {
					packet.setOnGround(false);
				}
			} else if (mode.getValue().equalsIgnoreCase("Old")) {
				packet.setOnGround(false);
			}
		}
	}
	
	@Override
	public Mod[] getConflictingMods() {
		ModManager m = Impact.getInstance().getModManager();
		return new Mod[] { m.get(NoFall.class) };
	}
}
